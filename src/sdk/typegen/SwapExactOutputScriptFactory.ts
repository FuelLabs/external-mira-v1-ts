/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.3
*/

import { ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { SwapExactOutputScript } from "./SwapExactOutputScript";

const bytecode = decompressBytecode("");

export class SwapExactOutputScriptFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, SwapExactOutputScript.abi, accountOrProvider);
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<SwapExactOutputScript>> {
    const factory = new SwapExactOutputScriptFactory(wallet);

    return factory.deploy({
      storageSlots: SwapExactOutputScript.storageSlots,
      ...options,
    });
  }
}
